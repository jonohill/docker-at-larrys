version: '3.9'

networks:
    backup: {}
    code: {}
    ytdlp: {}
    vaultwarden: {}
    filerun: {}
    gh_runner: {}
    storj: {}

# Images which require special regex handling for renovate
x-images:
    # Hardcodes version 3 because only 3 version parts are supported
    # renovate: versioning=regex:^3\.(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)-ls\d+$
    - &SONARR_IMAGE linuxserver/sonarr:3.0.8.1507-ls149
    # renovate: versioning=semver
    - &GH_RUNNER_IMAGE ghcr.io/jonohill/gh-runner:v3.4.5


services:

    # ~~~~~~~~~~~~ 
    # Server admin
    # ~~~~~~~~~~~~ 

    compose_up:
        image: jonoh/compose-up:v0.0.10
        restart: always
        environment:
            - DOCKER_HOST=unix:///var/run/docker.sock
        volumes:
            - /home/ubuntu/compose:/compose
            - /var/run/docker.sock:/var/run/docker.sock
        command: git pull

    cloudflare_compose_up:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        volumes:
            - /mnt/data/cloudflare_compose_up:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://compose_up:8080
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=compose-up
            - TUNNEL_ID=${COMPOSE_UP_TUNNEL_ID}
            - TUNNEL_SECRET=${COMPOSE_UP_TUNNEL_SECRET}

    compose_forever:
        image: jonoh/compose-up:v0.0.10
        restart: always
        environment:
            - DOCKER_HOST=unix:///var/run/docker.sock
        volumes:
            - /home/ubuntu/compose:/compose
            - /var/run/docker.sock:/var/run/docker.sock
        entrypoint: /compose/forever.sh

    tailscale:
        image: jonoh/tailscale:1.18.1
        devices:
            - /dev/net/tun:/dev/net/tun
        volumes:
            - /mnt/data/tailscale:/var/lib/tailscale
        network_mode: host
        runtime: runc
        privileged: true
        environment:
            - AUTH_KEY=${TAILSCALE_AUTH_KEY}
        command: --hostname=larry --advertise-exit-node
        restart: always

    cloudflare_ssh:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        network_mode: host
        runtime: runc
        volumes:
            - /mnt/data/cloudflare_ssh:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=ssh://localhost:22
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=larry
            - TUNNEL_ID=${SSH_TUNNEL_ID}
            - TUNNEL_SECRET=${SSH_TUNNEL_SECRET}

    rclone_serve_backup:
        image: rclone/rclone:1.59.0
        volumes:
            - /mnt/data/rclone_serve_backup:/config
            - /tmp/caches/rclone_serve_backup:/root/.cache
            - /home/ubuntu/compose/config/rclone_serve_backup/entrypoint.sh:/entrypoint.sh
        entrypoint: /entrypoint.sh
        environment: 
            - RCLONE_CONFIG_SEED=${RCLONE_CONFIG_SEED}
            - RCLONE_SOURCE=jotta:/backup
        restart: always
        networks:
            - backup

    duplicacy:
        image: jonoh/duplicacy:2.7.2
        environment:
            - BACKUP_CRON=1 * * * *
            - RUN_JOB_IMMEDIATELY=yes
            - PRUNE_CRON=34 1 * * sun
            - SNAPSHOT_ID=larry
            - DUPLICACY_PASSWORD=${DUPLICACY_PASSWORD}
            - STORAGE_URL=sftp://rclone_serve_backup:2022//duplicacy
            - JOB_RANDOM_DELAY=300
            - PRUNE_KEEP_POLICIES=0:360;30:180;7:30;1:7
            - PRE_BACKUP_SCRIPT=/usr/local/bin/pre_backup.sh
        volumes:
            - /mnt/data:/data
            - /mnt/data/duplicacy_naspool/config:/config
            - /home/ubuntu/compose/config/duplicacy/pre_backup.sh:/usr/local/bin/pre_backup.sh
        restart: always
        networks:
            - backup

    autoheal:
        image: willfarrell/autoheal:1.2.0
        restart: always
        environment: 
            - AUTOHEAL_CONTAINER_LABEL=all
            - AUTOHEAL_INTERVAL=15
            - AUTOHEAL_DEFAULT_STOP_TIMEOUT=60
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    filerun:
        image: filerun/filerun:arm64v8
        restart: always
        environment:
            FR_DB_HOST: filerun_db
            FR_DB_PORT: 3306
            FR_DB_NAME: filerun
            FR_DB_USER: root
            FR_DB_PASS: password
            APACHE_RUN_USER: www-data
            APACHE_RUN_USER_ID: 33
            APACHE_RUN_GROUP: www-data
            APACHE_RUN_GROUP_ID: 33
            TZ: Pacific/Auckland
        volumes:
            - /mnt/data/filerun/data:/user-files
        networks:
            - filerun

    filerun_db:
        image: mariadb:10.1.48
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: filerun
        volumes:
            - /mnt/data/filerun/db:/var/lib/mysql
        networks:
            - filerun

    filerun_cloudflare:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        volumes:
            - /mnt/data/filerun/cloudflare:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://filerun:80
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=files
            - TUNNEL_ID=${FILERUN_TUNNEL_ID}
            - TUNNEL_SECRET=${FILERUN_TUNNEL_SECRET}
        networks:
            - filerun

    # ~~~~~
    # Media
    # ~~~~~ 

    plex:
        image: jonoh/nas-plex:v0.0.78
        restart: always
        labels:
            - autoheal=true
        environment:
            - TZ=Pacific/Auckland
            - HOSTNAME=larry
            - INCOMING_DIR=/data/incoming
            - RCLONE_MOUNT_DIR=jotta:/plex-media
            - RCLONE_MOUNT_CACHE_DIR=/caches/rclone_plex
            - RCLONE_MOUNT_TARGET=/data/plex-media
            - RCLONE_CACHE_MAX_SIZE=25G
            # Antennas
            - ANTENNAS_URL=http://localhost:5004
            - TVHEADEND_URL=http://vpn_tvheadend:9981
            - TUNER_COUNT=6
            - DEVICE_UUID=7fb55421-ebfc-4fef-966e-30a706dd4c9e
        ports: 
            - 32400:32400
        volumes:
            - /mnt/data/plex:/config
            - /tmp/plex-transcode:/transcode
            - /tmp:/tmp
            - /tmp/caches/plex:/caches/rclone_plex
        cap_add:
            - SYS_ADMIN
        devices:
            - /dev/fuse
        security_opt:
            - apparmor:unconfined
        healthcheck:
            start_period: 120s

    cloudflare_plex:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        volumes:
            - /mnt/data/cloudflare_plex:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://plex:32400
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=plex
            - TUNNEL_ID=${PLEX_TUNNEL_ID}
            - TUNNEL_SECRET=${PLEX_TUNNEL_SECRET}

    plex_dvr:
        image: ghcr.io/hillnz/docker-nas-plex-dvr:49
        restart: always
        labels:
            - autoheal=true
        environment:
            - TZ=Pacific/Auckland
            - HOSTNAME=dvr
            - PLEX_CLAIM=${PLEX_CLAIM}
            - RCLONE_MOUNT_DIR=storj:/
            - RCLONE_MOUNT_CACHE_DIR=/caches/rclone_plex
            - RCLONE_MOUNT_TARGET=/data/dvr
            - RCLONE_WRITE_BACK=900s
            - ANTENNAS_URL=http://localhost:5004
            - TVHEADEND_URL=http://vpn_tvheadend:9981
            - TUNER_COUNT=10
            - DEVICE_UUID=3c1255f2-208e-47fa-90a5-c2d828dadd24
            - RUST_LOG=dvr_manager=debug
            - DVR_MANAGER_TV_LIBRARY_ID="1"
            - DVR_MANAGER_FILM_LIBRARY_ID="2"
            - DVR_MANAGER_CHANNELS=["tv.55"]
            - DVR_MANAGER_SIZE_LIMIT=149000000000
        volumes:
            - /mnt/data/plex_dvr:/config
            - /tmp/plex-transcode-dvr:/transcode
            - /tmp:/tmp
            - /tmp/caches/plex_dvr:/caches/rclone_plex
        cap_add:
            - SYS_ADMIN
        devices:
            - /dev/fuse
        security_opt:
            - apparmor:unconfined
        healthcheck:
            start_period: 120s

    cloudflare_plex_dvr:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        volumes:
            - /mnt/data/cloudflare_plex_dvr:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://plex_dvr:32400
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=plex-dvr
            - TUNNEL_ID=${PLEX_DVR_TUNNEL_ID}
            - TUNNEL_SECRET=${PLEX_DVR_TUNNEL_SECRET}         

    rclone_move_media:
        image: rclone/rclone:1.59.0
        volumes:
            - /mnt/data/tmp/plex-media:/source
            - /mnt/data/rclone_move_media:/config
            - /home/ubuntu/compose/config/rclone_move_media/entrypoint:/entrypoint
        environment:
            - RCLONE_CONFIG_SEED=${RCLONE_MOVE_MEDIA_CONF}
            - SOURCE=/source
            - DEST=jotta:/plex-media
        entrypoint: /entrypoint
        restart: always

    filebot:
        image: jonoh/nas-filebot:v0.0.17
        environment:
            - TZ=Pacific/Auckland
            - LANG=C.UTF-8
        volumes:
            - /mnt/data/filebot:/config
            - /mnt/data/downloads:/input
            - /mnt/data/tmp/plex-media:/output
        restart: always

    transmission:
        image: haugene/transmission-openvpn:4.0
        restart: always
        labels:
            - autoheal=true
        cap_add:
            - NET_ADMIN
        volumes:
            - /mnt/data/bt:/data/transmission-home
            - /mnt/data/downloads-incomplete:/data/incomplete
            - /mnt/data/downloads:/data/completed
            - /home/ubuntu/compose/config/ovpn/config.ovpn:/etc/openvpn/custom/default.ovpn
        environment:
            - TZ=Pacific/Auckland
            - OPENVPN_PROVIDER=custom
            - OPENVPN_USERNAME=${VPN_USERNAME}
            - OPENVPN_PASSWORD=${VPN_PASSWORD}
            - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=1

    cloudflare_transmission:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        volumes:
            - /mnt/data/cloudflare_transmission:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://transmission:9091
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=transmission
            - TUNNEL_ID=${TRANSMISSION_TUNNEL_ID}
            - TUNNEL_SECRET=${TRANSMISSION_TUNNEL_SECRET}
    
    transmission_cleanup:
        image: jonoh/transmission-cleanup:v0.0.26
        restart: always
        volumes:
            - /mnt/data/downloads:/cleanup
        environment: 
            - TRANSMISSION_HOST=transmission

    # ~~
    # TV
    # ~~

    vpn_tvheadend:
        image: qmcgaw/gluetun:v3.28.2
        container_name: vpn_tvheadend
        restart: always
        cap_add:
            - NET_ADMIN
        labels:
            - autoheal=true
        environment:
            - VPNSP=surfshark
            - OPENVPN_USER=${VPN_USERNAME}
            - OPENVPN_PASSWORD=${VPN_PASSWORD}
            - SERVER_HOSTNAME=nz-akl.prod.surfshark.com
            - HTTPPROXY=on

    tvheadend:
        image: lscr.io/linuxserver/tvheadend
        container_name: tvheadend
        restart: always    
        labels:
            - autoheal=true         
        network_mode: "service:vpn_tvheadend"
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Pacific/Auckland
        volumes:
            - /mnt/data/tvheadend:/config
        healthcheck:
            test: curl -f https://tvheadend.hillnz.com || exit 1
            interval: 30s
            timeout: 10s
            retries: 1
            start_period: 30s

    cloudflare_tvheadend:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        volumes:
            - /mnt/data/cloudflare_tvheadend:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://vpn_tvheadend:9981
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=tvheadend
            - TUNNEL_ID=${TV_TUNNEL_ID}
            - TUNNEL_SECRET=${TV_TUNNEL_SECRET}


    # ~~~~~
    # Other
    # ~~~~~

    postgres:
        image: postgres:13.6
        volumes:
            - /mnt/data/postgresql/13/data:/var/lib/postgresql/data
        restart: always

    pgadmin:
        image: dpage/pgadmin4:6.8
        restart: always
        environment:
            - TZ=Pacific/Auckland
            - PGADMIN_DEFAULT_EMAIL=admin@example.com
            - PGADMIN_DEFAULT_PASSWORD=password
            - PGADMIN_DISABLE_POSTFIX=True
        volumes:
            - /mnt/data/pgadmin:/var/lib/pgadmin

    cloudflare_pgadmin:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://pgadmin:80
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=pgadmin
            - TUNNEL_ID=${PGADMIN_TUNNEL_ID}
            - TUNNEL_SECRET=${PGADMIN_TUNNEL_SECRET}
        volumes:
            - /mnt/data/cloudflare_pgadmin:/config        

    radio_db:
        image: jonoh/radio_db:0.3.28
        container_name: radio_db
        environment:
            - RDB_DATABASE_HOST=postgres
            - RDB_DATABASE_NAME=radio_db
            - RDB_DATABASE_USERNAME=radio_db
            - RDB_DATABASE_PASSWORD=${RDB_DB_PASSWORD}
            - RDB_SPOTIFY_CLIENT_ID=${RDB_SPOTIFY_CLIENT_ID}
            - RDB_SPOTIFY_CLIENT_SECRET=${RDB_SPOTIFY_CLIENT_SECRET}
            - RDB_SPOTIFY_AUTH_SEED=${RDB_SPOTIFY_AUTH_SEED}
        volumes:
            - /mnt/data/radio_db/config.yml:/app/config.yml
        restart: always

    twitterdedupe-redis:
        image: redis:6.2.6
        volumes:
            - /mnt/data/twitterdedupe:/data
        command: redis-server --appendonly yes
        restart: always

    twitterdedupe-verge:
        image: jonoh/twitter-dedupe:0.7.3
        environment:
            - TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}
            - TWITTER_CONSUMER_SECRET=${TWITTER_CONSUMER_SECRET}
            - TWITTER_ACCESS_TOKEN=${TWITTER_ACCESS_TOKEN}
            - TWITTER_ACCESS_TOKEN_SECRET=${TWITTER_ACCESS_TOKEN_SECRET}
            - REDISTOGO_URL=redis://twitterdedupe-redis:6379
            - TWITTER_SCREEN_NAME=thevergelite
            - RETWEET=1
            - WAIT_INTERVAL=300 # Time to wait between polls, in seconds
            - LOG_LEVEL=WARN # Or INFO, OR DEBUG, etc.
        restart: always

    webtop:
        image: jonoh/nas-webtop:2022.126.336
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Pacific/Auckland
            - RCLONE_MOUNT_TARGET=/config/jotta
            - RCLONE_MOUNT_DIR=jotta:/
        volumes:
            - /mnt/data/webtop:/config
        ports:
            - 3000:3000
        shm_size: "1gb"
        restart: always
        devices:
            - /dev/fuse            
        cap_add:
            - SYS_ADMIN            
        security_opt:
            - apparmor:unconfined     
            - seccomp:unconfined               

    cloudflare_webtop:
        image: jonoh/cloudflared:2022.7.1
        volumes:
            - /mnt/data/cloudflare_webtop:/config        
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://webtop:3000
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=webtop
            - TUNNEL_ID=${WEBTOP_TUNNEL_ID}
            - TUNNEL_SECRET=${WEBTOP_TUNNEL_SECRET}
        restart: always

    yt_cast:
        image: jonoh/yt-cast:0.4.9
        container_name: yt_cast
        volumes: 
            - /tmp/yt_cast:/tmp
        environment:
            - ROCKET_ADDRESS=0.0.0.0
            - ROCKET_BASE_URL=${YT_CAST_BASE_URL}
            - ROCKET_CHANNEL_WHITELIST=${YT_CAST_CHANNEL_WHITELIST}
        restart: always

    cloudflare_yt_cast:
        image: jonoh/cloudflared:2022.7.1
        volumes:
            - /mnt/data/cloudflare_yt_cast:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://yt_cast:8000
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=yt-cast
            - TUNNEL_ID=${YT_CAST_TUNNEL_ID}
            - TUNNEL_SECRET=${YT_CAST_TUNNEL_SECRET}
        restart: always

    vscode:
        image: jonoh/vscode:v0.0.10
        restart: always
        volumes:
            - /mnt/data:/mnt/data
            - /tmp:/tmp
            - /mnt/data/repos:/home/workspace            
        environment:
            - TZ=Pacific/Auckland
        networks:
            - code
    
    cloudflare_vscode:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        volumes:
            - /mnt/data/cloudflare_vscode:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://vscode:3000
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=code
            - TUNNEL_ID=${CODE_TUNNEL_ID}
            - TUNNEL_SECRET=${CODE_TUNNEL_SECRET}
        networks:
            - code

    vaultwarden:
        image: vaultwarden/server:1.25.0
        restart: always
        volumes:
            - /mnt/data/vaultwarden:/data
        environment:
            - DISABLE_ADMIN_TOKEN=true
        networks:
            - vaultwarden

    cloudflare_vaultwarden:
        image: jonoh/cloudflared:2022.7.1
        restart: always
        volumes:
            - /mnt/data/cloudflare_vaultwarden:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://vaultwarden:80
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=vault
            - TUNNEL_ID=${VAULT_TUNNEL_ID}
            - TUNNEL_SECRET=${VAULT_TUNNEL_SECRET}
        networks:
          - vaultwarden

    github_runner_runner:
        image: docker
        restart: always
        environment:
            IMAGE: *GH_RUNNER_IMAGE
            DOCKER_HOST: unix:///var/run/docker.sock
            ENV_FILE: |
                RUNNER_NAME=larry
                GITHUB_PERSONAL_TOKEN=${GITHUB_TOKEN}
                GITHUB_OWNER=hillnz
                RUNNER_LABELS=self-hosted,linux,arm64
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - gh_runner
        entrypoint: ["sh", "-c"]
        command: [
            echo "$$ENV_FILE" >.env;
            docker run
                --runtime sysbox-runc
                --name=gh-runner-$$(date +%s)
                --rm
                --env-file=.env
                "$$IMAGE"
        ]

    storj:
        image: ghcr.io/jonohill/nas-storj:24
        restart: always
        labels:
            - autoheal=true        
        environment:
            - RCLONE_CONFIG=/config/rclone.conf
            - RCLONE_MOUNT_CACHE_DIR=/cache
            - MOUNT_SOURCE=union:/
            - STORAGE_SOURCE=onedrive:/
            - LOCAL_SOURCE=file:/mnt/data/storj/data/
            - STORAGE_DIR=/app/config/storage
            - WALLET=${STORJ_WALLET}
            - EMAIL=${EMAIL}
            - ADDRESS=${PUBLIC_IP}:28967
            - STORAGE=650000000000 # 650 GB
            - WALLET_FEATURES=zksync
        volumes:
            - /mnt/data/storj:/config
            - /mnt/data/storj/identity:/app/identity
            - /mnt/data/storj/data:/mnt/data/storj/data
            - /tmp/storj_cache:/cache
        ports:
            - 28967:28967/tcp
            - 28967:28967/udp
        cap_add:
            - SYS_ADMIN
        devices:
            - /dev/fuse
        security_opt:
            - apparmor:unconfined
        networks:
            - storj

    cloudflare_storj:
        image: jonoh/cloudflared:2022.6.3
        restart: always
        volumes:
            - /mnt/data/cloudflare_storj:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://storj:14002
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=storj
            - TUNNEL_ID=${STORJ_TUNNEL_ID}
            - TUNNEL_SECRET=${STORJ_TUNNEL_SECRET}
        networks:
            - storj
