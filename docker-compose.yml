version: '3.7'

networks:
    backup: {}

# Images which require special regex handling for renovate
x-images:
    # Hardcodes version 3 because only 3 version parts are supported
    # renovate: versioning=regex:^3\.(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)-ls\d+$
    - &SONARR_IMAGE linuxserver/sonarr:3.0.6.1265-ls111

services:

    # ~~~~~~~~~~~~ 
    # Server admin
    # ~~~~~~~~~~~~ 

    tailscale:
        image: jonoh/tailscale:1.14.6
        devices:
            - /dev/net/tun:/dev/net/tun
        volumes:
            - /mnt/data/tailscale:/var/lib/tailscale
        network_mode: host
        privileged: true
        environment:
            - AUTH_KEY=${TAILSCALE_AUTH_KEY}
        command: --hostname=larry --exit-node
        restart: always

    rclone_serve_backup:
        image: rclone/rclone:1.56.2
        volumes:
            - /mnt/data/rclone_serve_backup:/config
            - /tmp/caches/rclone_serve_backup:/root/.cache
            - ./config/rclone_serve_backup/entrypoint.sh:/entrypoint.sh
        entrypoint: /entrypoint.sh
        environment: 
            - RCLONE_CONFIG_SEED=${RCLONE_CONFIG_SEED}
            - RCLONE_SOURCE=jotta:/backup
        restart: always
        networks:
            - backup

    duplicacy:
        image: jonoh/duplicacy:2.7.2
        environment:
            - BACKUP_CRON=1 * * * *
            - RUN_JOB_IMMEDIATELY=yes
            - PRUNE_CRON=34 1 * * sun
            - SNAPSHOT_ID=larry
            - DUPLICACY_PASSWORD=${DUPLICACY_PASSWORD}
            - STORAGE_URL=sftp://rclone_serve_backup:2022//duplicacy
            - JOB_RANDOM_DELAY=300
            - PRUNE_KEEP_POLICIES=0:360;30:180;7:30;1:7
            - PRE_BACKUP_SCRIPT=/usr/local/bin/pre_backup.sh
        volumes:
            - /mnt/data:/data
            - /mnt/data/duplicacy_naspool/config:/config
            - ./config/duplicacy/pre_backup.sh:/usr/local/bin/pre_backup.sh
        restart: always
        networks:
            - backup

    autoheal:
        image: willfarrell/autoheal:1.2.0
        restart: always
        environment: 
            - AUTOHEAL_CONTAINER_LABEL=all
            - AUTOHEAL_INTERVAL=15
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    # ~~~~~
    # Media
    # ~~~~~ 

    plex:
        image: jonoh/nas-plex:v0.0.39
        restart: always
        labels:
            - autoheal=true
        environment:
            - TZ=Pacific/Auckland
            - HOSTNAME=larry
            - PLEX_CLAIM=${PLEX_CLAIM}
            - INCOMING_DIR=/data/incoming
            - RCLONE_MOUNT_DIR=jotta:/plex-media
            - RCLONE_MOUNT_CACHE_DIR=/caches/rclone_plex
            - RCLONE_MOUNT_TARGET=/data/plex-media
            - RCLONE_CACHE_MAX_SIZE=25G
        ports: 
            - 32400:32400
        volumes:
            - /mnt/data/plex:/config
            - /tmp/plex-transcode:/transcode
            - /tmp:/tmp
            - /tmp/caches/plex:/caches/rclone_plex
        cap_add:
            - SYS_ADMIN
        devices:
            - /dev/fuse
        security_opt:
            - apparmor:unconfined

    cloudflare_plex:
        image: jonoh/cloudflared:2021.9.2
        volumes:
            - /mnt/data/cloudflare_plex:/home/nonroot/.cloudflared
        environment:
            - TZ=Pacific/Auckland
            - NO_AUTOUPDATE=true
            - TUNNEL_URL=http://plex:32400
            - CF_TUNNEL_ID=${CF_TUNNEL_ID}
        restart: always
        command: tunnel run ${CF_TUNNEL_ID}

    rclone_move_media:
        image: rclone/rclone:1.56.2
        volumes:
            - /mnt/data/tmp/plex-media:/source
            - /mnt/data/rclone_move_media:/config
            - ./config/rclone_move_media/entrypoint:/entrypoint
        environment:
            - RCLONE_CONFIG_SEED=${RCLONE_MOVE_MEDIA_CONF}
            - SOURCE=/source
            - DEST=jotta:/plex-media
        entrypoint: /entrypoint
        restart: always

    filebot:
        image: jonoh/nas-filebot:v0.0.6
        environment:
            - TZ=Pacific/Auckland
            - LANG=C.UTF-8
        volumes:
            - /mnt/data/filebot:/config
            - /mnt/data/downloads:/input
            - /mnt/data/tmp/plex-media:/output
        restart: always

    transmission:
        image: haugene/transmission-openvpn:3.7
        restart: always
        labels:
            - autoheal=true
        cap_add:
            - NET_ADMIN
        volumes:
            - /mnt/data/bt:/data/transmission-home
            - /mnt/data/downloads-incomplete:/data/incomplete
            - /mnt/data/downloads:/data/completed
            - ./config/getflix_proxy/config.ovpn:/etc/openvpn/custom/default.ovpn
        environment:
            - TZ=Pacific/Auckland
            - OPENVPN_PROVIDER=custom
            - OPENVPN_USERNAME=${GETFLIX_USERNAME}
            - OPENVPN_PASSWORD=${GETFLIX_PASSWORD}

    cloudflare_transmission:
        image: jonoh/cloudflared:2021.9.2
        restart: always
        volumes:
            - /mnt/data/cloudflare_transmission:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://transmission:9091
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=transmission
            - TUNNEL_ID=${TRANSMISSION_TUNNEL_ID}
            - TUNNEL_SECRET=${TRANSMISSION_TUNNEL_SECRET}
    
    transmission_cleanup:
        image: jonoh/transmission-cleanup:v0.0.8
        restart: always
        volumes:
            - /mnt/data/downloads:/cleanup
        environment: 
            - TRANSMISSION_HOST=transmission

    jackett:
        image: jonoh/nas-jackett:v0.0.2
        volumes:
            - /mnt/data/jackett:/config
            - /tmp/jackett:/downloads
        environment:
            - PGID=1000
            - PUID=1000
            - TZ=Pacific/Auckland
        restart: always

    cloudflare_jackett:
        image: jonoh/cloudflared:2021.9.2
        volumes:
            - /mnt/data/cloudflare_jackett:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://jackett:9117
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=jackett
            - TUNNEL_ID=${JACKETT_TUNNEL_ID}
            - TUNNEL_SECRET=${JACKETT_TUNNEL_SECRET}
        restart: always

    sonarr:
        image: *SONARR_IMAGE
        volumes:
            - /mnt/data/sonarr:/config
            - /mnt/data/downloads:/data/completed
        environment:
            - PGID=1000
            - PUID=1000
            - TZ=Pacific/Auckland
        restart: always

    cloudflare_sonarr:
        image: jonoh/cloudflared:2021.9.2
        volumes:
            - /mnt/data/cloudflare_sonarr:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://sonarr:8989
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=sonarr
            - TUNNEL_ID=${SONARR_TUNNEL_ID}
            - TUNNEL_SECRET=${SONARR_TUNNEL_SECRET}
        restart: always

    # ~~~~~
    # Other
    # ~~~~~

    postgres:
        image: postgres:14.0
        volumes:
            - /mnt/data/postgres/db:/var/lib/postgresql/data
        restart: always

    radio_db:
        image: jonoh/radio_db:0.3.10
        environment:
            - RDB_DATABASE_HOST=postgres
            - RDB_DATABASE_NAME=radio_db
            - RDB_DATABASE_USERNAME=radio_db
            - RDB_DATABASE_PASSWORD=${RDB_DB_PASSWORD}
            - RDB_SPOTIFY_CLIENT_ID=${RDB_SPOTIFY_CLIENT_ID}
            - RDB_SPOTIFY_CLIENT_SECRET=${RDB_SPOTIFY_CLIENT_SECRET}
            - RDB_SPOTIFY_AUTH_SEED=${RDB_SPOTIFY_AUTH_SEED}
        volumes:
            - /mnt/data/radio_db/config.yml:/app/config.yml
        restart: always

    twitterdedupe-redis:
        image: redis:6.2.5
        volumes:
            - /mnt/data/twitterdedupe:/data
        command: redis-server --appendonly yes
        restart: always

    twitterdedupe-verge:
        image: jonoh/twitter-dedupe:0.7.2
        environment:
            - TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}
            - TWITTER_CONSUMER_SECRET=${TWITTER_CONSUMER_SECRET}
            - TWITTER_ACCESS_TOKEN=${TWITTER_ACCESS_TOKEN}
            - TWITTER_ACCESS_TOKEN_SECRET=${TWITTER_ACCESS_TOKEN_SECRET}
            - REDISTOGO_URL=redis://twitterdedupe-redis:6379
            - TWITTER_SCREEN_NAME=thevergelite
            - RETWEET=1
            - WAIT_INTERVAL=300 # Time to wait between polls, in seconds
            - LOG_LEVEL=WARN # Or INFO, OR DEBUG, etc.
        restart: always

    webtop:
        image: linuxserver/webtop:ubuntu-xfce
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Pacific/Auckland
        volumes:
            - /mnt/data/webtop:/config
        ports:
            - 3000:3000
        shm_size: "1gb"
        restart: always

    cloudflare_webtop:
        image: jonoh/cloudflared:2021.9.2
        volumes:
            - /mnt/data/cloudflare_webtop:/config        
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://webtop:3000
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=webtop
            - TUNNEL_ID=${WEBTOP_TUNNEL_ID}
            - TUNNEL_SECRET=${WEBTOP_TUNNEL_SECRET}
        restart: always
